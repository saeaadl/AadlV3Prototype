package FlowExamples is
// connections without and with reach down into is
// shared data component
	import StandardProperties::*;

	type systemstate;
	type int;
	
	interface actuator is
		inp: in port;
		fea: feature;
		action: flow sink  inp ;
	end;
	interface sensor is
		outp: out port;
		fea: feature;
		reading: flow source outp;
	end;
	
	abstract sensor.i  is
		sub1: thread sense;
		upmap: connection sub1.p1 -> outp ;
		reading => flow upmap -> sub1.reading;
	end;
	abstract actuator.i  is
		sub2: thread actuate;
		downmap: connection inp -> sub2.p1;
		action=> flow sub2.taction;
	end;
	thread interface sense  is
		p1: out port ;
		reading: flow  source p1;
	end;
	thread interface actuate  is
		p1: in port ;
		taction: flow  sink p1;
	end;
	
	thread interface filter is
	insignal : in port;
	outsignal : out port;
	filterpath: flow path insignal -> outsignal;
	#Period => 20 ;
	end;
	
	thread interface compute is
	insignal : in port;
	outsignal : out port;
	computepath: flow path insignal -> outsignal;
	end;
	
	process interface control is
	insignal: in port;
	outaction: out port;
	processflow: flow path insignal -> outaction;
	end;
	
	process control.impl is
		dofilter: thread filter;
		docompute: thread compute;
		extin: connection insignal -> dofilter.insignal;
		ftoc: connection dofilter.outsignal -> docompute.insignal;
		extout: connection docompute.outsignal -> outaction ;
		processflow => flow dofilter.filterpath -> ftoc -> docompute.computepath ;
	end;
	
	system interface conntop is end;
	system conntop.i is
		sense: abstract sensor.i;
		processing: process control.impl;
		actuate: abstract actuator.i;
		hw : system hardwareplatform.impl;
		sensetocontrol: connection sense.outp -> processing.insignal;
		controltoactuate: connection processing.outaction -> actuate.inp;
		etef: end to end flow sense.reading -> sensetocontrol-> processing.processflow -> controltoactuate -> actuate.action;
	end;
	
	bus interface canbus 
	is end;

	
	processor interface x86 is
	canbusaccess: requires bus access canbus;
	end;
	
	system interface hardwareplatform is
		canbusaccess: provides bus access canbus;
	end;
	
	system hardwareplatform.impl is
	cpu: processor x86;
	mybus: bus canbus;
	busconn: connection cpu.canbusaccess <-> mybus;
	extbusaccess: connection canbusaccess <-> mybus;
	end;
	
end;