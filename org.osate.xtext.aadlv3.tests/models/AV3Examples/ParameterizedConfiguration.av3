package ParameterizedConfiguration 
	interface receiver  is
		inp: in port;
	end
	interface sender is
		outp: out port;
	end
	
	abstract sender.i is
		sub1: abstract sub;
	end
	
	configuration sender.sensetask extends sender.i  is
		sub1 => sub.i;
	end
	
	abstract receiver.i  is
		sub2: abstract sub;
	end
	
	interface sub  is
		p1: in port ;
	end
	abstract sub.i is
		t1: abstract subsub;
	end
	interface subsub is
		p1: in port ;
	end
	
	system interface top
	end
	
	system top.i  is
		sense: abstract sender ;
		sense1 : abstract sender.i;
		sense2: abstract sender.i;
		actuate: abstract receiver;
	end
	
	configuration top.topc(p1: sender) extends top.i  is
		sense => p1;
//		sense1 => { sub1 => p1;};
	end
	
	system interface supertop 
	end
	
	system supertop.i  is
		tops: system top.topc(p1 => sender.sensetask);
	end
	
	system supertop.i2  is
		tops: system top;
	end
	
	configuration supertop.pconf (p11 : sender) extends supertop.i2 is
		tops => top.topc(p1=>p11);
	end
	
	configuration top.topcc extends  top.topc(p1=>sender.sensetask) end

	configuration supertop.topcc extends  supertop.pconf(p11=>sender.sensetask) end
end