/*
 * generated by Xtext 2.14.0
 */
package org.osate.xtext.aadlv3.formatting2

import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.osate.aadlv3.aadlv3.Component
import org.osate.aadlv3.aadlv3.ComponentClassifier
import org.osate.aadlv3.aadlv3.ConfigurationAssignment
import org.osate.aadlv3.aadlv3.Import
import org.osate.aadlv3.aadlv3.ModelElement
import org.osate.aadlv3.aadlv3.PackageDeclaration
import org.osate.aadlv3.aadlv3.PropertyDefinition
import org.osate.aadlv3.aadlv3.PropertyAssociation
import org.osate.aadlv3.aadlv3.Type
import org.osate.aadlv3.aadlv3.Workingset

@SuppressWarnings("all")
class AadlV3Formatter extends AbstractFormatter2 {

	def dispatch void format(PackageDeclaration pd, extension IFormattableDocument document) {
		interior(pd.regionFor.keyword("package"), pd.regionFor.keyword("end"))[indent]
//		pd.regionFor.keyword("{").append[newLine]
		for (Import _import : pd.getImports()) {
			_import.format;
		}
		if (pd.eContainer !== null) {
			pd.append[newLines = 2]
		} else {
			pd.surround[noSpace]
		}
		pd.getElements().forEach[format]
	}

	def dispatch void format(Workingset ws, extension IFormattableDocument document) {
		ws.surround[noSpace]
		ws.interior[indent]
		ws.rootComponents.forEach[format]
	}

	def dispatch void format(ComponentClassifier cl, extension IFormattableDocument document) {
		cl.append[newLines = 2]
		interior(cl.regionFor.keyword("is"), cl.regionFor.keyword("end"))[indent]
		cl.regionFor.keyword("is").append[newLine]
		cl.regionFor.keyword("features").prepend[newLine]
		cl.regionFor.keyword("subcomponents").prepend[newLine]
		cl.regionFor.keyword("connections").prepend[newLine]
		interior(cl.regionFor.keyword("features"), cl.regionFor.keyword("end"))[indent]
//		interior(cl.regionFor.keyword("features"),cl.regionFor.keyword("subcomponents"))[indent]
		interior(cl.regionFor.keyword("subcomponents"), cl.regionFor.keyword("end"))[indent]
		interior(cl.regionFor.keyword("connections"), cl.regionFor.keyword("end"))[indent]
		interior(cl.regionFor.keyword("properties"), cl.regionFor.keyword("end"))[indent]
//		interior(cl.regionFor.keyword("subcomponents"),cl.regionFor.keyword("connections"))[indent]
//		cl.interior[indent]
		cl.eContents.forEach[format]
	}

	def dispatch void format(Type tp, extension IFormattableDocument document) {
		tp.append[newLines = 2]
	}

	def dispatch void format(Import impt, extension IFormattableDocument document) {
		impt.append[newLines = 2]
	}

	def dispatch void format(PropertyDefinition tp, extension IFormattableDocument document) {
		tp.append[newLines = 2]
	}

	def dispatch void format(ModelElement me, extension IFormattableDocument document) {
		me.append[newLine]
	}

	def dispatch void format(PropertyAssociation pa, extension IFormattableDocument document) {
		pa.append[newLine]
	}

	def dispatch void format(ConfigurationAssignment ca, extension IFormattableDocument document) {
		ca.append[newLine]
	}

	def dispatch void format(Component co, extension IFormattableDocument document) {
		interior(co.regionFor.keyword("features"), co.regionFor.keyword("end"))[indent]
		interior(co.regionFor.keyword("subcomponents"), co.regionFor.keyword("end"))[indent]
		co.append[newLines = 1]
		co.eContents.forEach[format]
	}
}
